:orphan:

:mod:`jaxlie._utils`
====================

.. py:module:: jaxlie._utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   jaxlie._utils.get_epsilon
   jaxlie._utils.register_lie_group


.. function:: get_epsilon(dtype: jnp.dtype) -> float


.. data:: T
   

   

.. function:: register_lie_group(*, matrix_dim: int, parameters_dim: int, tangent_dim: int, space_dim: int) -> Callable[[Type[T]], Type[T]]

   Decorator for registering Lie group dataclasses.


   * Sets static dimensionality attributes
   * Makes the group hashable
   * Marks all functions for JIT compilation
   * Adds flattening/unflattening ops for use as a PyTree node

   Example:

   .. code-block::

      @register_lie_group(
          matrix_dim=2,
          parameters_dim=2,
          tangent_dim=1,
          space_dim=2,
      )
      @dataclasses.dataclass(frozen=True)
      class SO2(_base.MatrixLieGroup):
          ...


