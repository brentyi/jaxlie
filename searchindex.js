Search.setIndex({"docnames": ["api/jaxlie/_base/index", "api/jaxlie/_se2/index", "api/jaxlie/_se3/index", "api/jaxlie/_so2/index", "api/jaxlie/_so3/index", "api/jaxlie/hints/index", "api/jaxlie/index", "api/jaxlie/manifold/_autodiff/index", "api/jaxlie/manifold/_rplus_rminus/index", "api/jaxlie/manifold/_tree_utils/index", "api/jaxlie/manifold/index", "api/jaxlie/utils/_utils/index", "api/jaxlie/utils/index", "index", "se3_overview", "tangent_space_adam", "vmap_usage"], "filenames": ["api/jaxlie/_base/index.rst", "api/jaxlie/_se2/index.rst", "api/jaxlie/_se3/index.rst", "api/jaxlie/_so2/index.rst", "api/jaxlie/_so3/index.rst", "api/jaxlie/hints/index.rst", "api/jaxlie/index.rst", "api/jaxlie/manifold/_autodiff/index.rst", "api/jaxlie/manifold/_rplus_rminus/index.rst", "api/jaxlie/manifold/_tree_utils/index.rst", "api/jaxlie/manifold/index.rst", "api/jaxlie/utils/_utils/index.rst", "api/jaxlie/utils/index.rst", "index.rst", "se3_overview.rst", "tangent_space_adam.rst", "vmap_usage.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie._se2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie._se3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie._so2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie._so3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.hints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.manifold._autodiff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.manifold._rplus_rminus</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.manifold._tree_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.manifold</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.utils._utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">jaxlie.utils</span></code>", "jaxlie documentation", "SE(3) Overview", "Tangent-space ADAM", "<cite>jax.vmap</cite> Usage"], "terms": {"grouptyp": [0, 1, 2, 3, 4, 6, 8, 10], "segrouptyp": 0, "matrixliegroup": [0, 1, 2, 3, 4, 6, 8, 10, 13], "paramet": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], "base": [0, 1, 2, 3, 4, 5, 6], "abc": [0, 1, 2, 3, 4, 6], "overrid": [0, 1, 2, 3, 4, 6], "enforceoverrid": [0, 1, 2, 3, 4, 6], "enforc": [0, 1, 2, 3, 4, 6], "interfac": [0, 6], "definit": [0, 6], "matrix": [0, 1, 2, 3, 4, 6], "lie": [0, 6, 7, 8, 10, 11, 12, 13], "group": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13], "matrix_dim": [0, 6, 11, 12], "classvar": [0, 6], "int": [0, 6], "dimens": [0, 6], "squar": [0, 6], "output": [0, 1, 2, 3, 4, 6, 11, 12], "from": [0, 1, 2, 3, 4, 6], "as_matrix": [0, 1, 2, 3, 4, 6], "parameters_dim": [0, 6, 8, 10, 11, 12], "underli": [0, 1, 2, 3, 4, 6], "tangent_dim": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12], "tangent": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13], "space": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13], "space_dim": [0, 6, 11, 12], "coordin": [0, 6], "can": [0, 4, 6], "transform": [0, 1, 2, 3, 4, 6, 8, 10, 13], "__matmul__": [0, 6], "self": [0, 1, 2, 3, 4, 6], "other": [0, 3, 4, 6, 8, 10], "hint": [0, 6, 8, 10, 13], "arrai": [0, 5, 6, 8, 10], "jax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13], "numpi": [0, 1, 2, 3, 4, 6, 8, 10], "ndarrai": [0, 1, 2, 3, 4, 5, 6, 8, 10], "overload": [0, 6], "oper": [0, 6], "switch": [0, 6], "between": [0, 1, 2, 3, 4, 6], "action": [0, 3, 4, 6], "appli": [0, 3, 4, 6], "multipl": [0, 6], "multipli": [0, 3, 4, 6, 13], "type": [0, 1, 2, 5, 6, 11, 12, 13], "abstract": [0, 6], "classmethod": [0, 6], "ident": [0, 1, 2, 3, 4, 6, 13], "cl": [0, 6], "return": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12], "element": [0, 1, 2, 3, 4, 6], "from_matrix": [0, 1, 2, 3, 4, 6], "get": [0, 1, 2, 3, 4, 6], "member": [0, 1, 2, 3, 4, 6], "represent": [0, 1, 2, 3, 4, 6], "representaiton": [0, 1, 2, 3, 4, 6], "homogen": [0, 1, 2, 3, 4, 6], "se": [0, 1, 2, 3, 4, 6, 13], "target": [0, 3, 4, 6], "point": [0, 3, 4, 6], "compos": [0, 3, 4, 6], "thi": [0, 1, 3, 4, 6], "anoth": [0, 3, 4, 6], "exp": [0, 1, 2, 3, 4, 6, 8, 10, 13], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 10], "expm": [0, 1, 2, 3, 4, 6], "wedg": [0, 1, 2, 3, 4, 6], "vector": [0, 1, 2, 3, 4, 6, 7, 10], "take": [0, 1, 2, 3, 4, 6], "exponenti": [0, 1, 2, 3, 4, 6], "log": [0, 1, 2, 3, 4, 6, 8, 10, 13], "vee": [0, 1, 2, 3, 4, 6], "logm": [0, 1, 2, 3, 4, 6], "shape": [0, 1, 2, 3, 4, 6, 8, 10], "should": [0, 1, 2, 3, 4, 6, 8, 10], "adjoint": [0, 1, 2, 3, 4, 6, 13], "which": [0, 1, 2, 3, 4, 6], "more": [0, 1, 2, 3, 4, 6], "precis": [0, 1, 2, 3, 4, 6, 11, 12], "omega": [0, 1, 2, 3, 4, 6], "adj_t": [0, 1, 2, 3, 4, 6], "In": [0, 1, 2, 3, 4, 6], "robot": [0, 1, 2, 3, 4, 6], "typic": [0, 1, 2, 3, 4, 6], "us": [0, 1, 2, 3, 4, 6, 8, 10], "twist": [0, 1, 2, 3, 4, 6], "wrench": [0, 1, 2, 3, 4, 6], "jacobian": [0, 1, 2, 3, 4, 6, 8, 10, 13], "across": [0, 1, 2, 3, 4, 6], "differ": [0, 1, 2, 3, 4, 6], "refer": [0, 1, 2, 3, 4, 6], "frame": [0, 1, 2, 3, 4, 6], "invers": [0, 3, 4, 6, 8, 10, 13], "our": [0, 3, 4, 6], "normal": [0, 3, 4, 6], "project": [0, 3, 4, 6], "valu": [0, 3, 4, 6, 7, 10], "sample_uniform": [0, 1, 2, 3, 4, 6], "kei": [0, 1, 2, 3, 4, 6], "draw": [0, 1, 2, 3, 4, 6], "uniform": [0, 1, 2, 3, 4, 6], "sampl": [0, 1, 2, 3, 4, 6], "translat": [0, 1, 2, 3, 4, 6], "applic": [0, 1, 2, 3, 4, 6], "ar": [0, 1, 2, 3, 4, 6, 8, 10], "rang": [0, 1, 2, 3, 4, 6], "1": [0, 1, 2, 3, 4, 6, 8, 10], "keyarrai": [0, 5], "prng": [0, 1, 2, 3, 4, 6], "random": [0, 1, 2, 3, 4, 5, 6], "prngkei": [0, 1, 2, 3, 4, 6], "get_batch_ax": [0, 6], "ani": [0, 6], "lead": [0, 6], "batch": [0, 6], "ax": [0, 6], "contain": [0, 4, 5, 6, 8, 10], "If": [0, 6], "an": [0, 4, 6], "100": [0, 6], "4": [0, 1, 4, 6], "i": [0, 1, 2, 3, 4, 6, 13], "place": [0, 6], "wxyz": [0, 2, 4, 6], "field": [0, 6], "so3": [0, 2, 4, 6, 13], "object": [0, 3, 6, 8, 10], "exampl": [0, 6], "gener": [0, 1, 2, 4, 6, 13], "implement": [0, 6, 13], "jdc": [0, 6], "enforcedannotationsmixin": [0, 1, 2, 3, 4, 6, 13], "tupl": [0, 4, 5, 6], "ellipsi": [0, 1, 2, 3, 4, 6], "sobas": [0, 3, 4, 6, 13], "special": [0, 1, 2, 3, 4, 6], "orthogon": [0, 3, 4, 6], "containedsotyp": [0, 6], "sebas": [0, 1, 2, 6, 13], "euclidean": [0, 1, 2, 6, 8, 10], "each": [0, 6, 13], "n": [0, 6], "so": [0, 6, 13], "rotat": [0, 1, 2, 3, 4, 6], "well": [0, 6], "dimension": [0, 6, 11, 12], "from_rotation_and_transl": [0, 1, 2, 6], "construct": [0, 1, 2, 3, 4, 6], "rigid": [0, 1, 2, 6, 13], "term": [0, 1, 2, 6, 8, 10], "from_rot": [0, 6], "": [0, 1, 2, 6], "se2": [1, 6, 13], "jax_dataclass": [1, 2, 3, 4, 6, 13], "so2": [1, 3, 6, 13], "_enforced_annot": [1, 2, 3, 4, 6, 13], "proper": [1, 2, 6], "2d": [1, 3, 6], "intern": [1, 2, 3, 4, 6], "parameter": [1, 2, 3, 4, 6], "co": [1, 3, 6], "sin": [1, 3, 6], "x": [1, 2, 4, 6], "y": [1, 2, 4, 6], "vx": [1, 2, 6], "vy": [1, 2, 6], "unit_complex_xi": [1, 6], "typing_extens": [1, 2, 3, 4, 6], "annot": [1, 2, 3, 4, 6], "float": [1, 2, 3, 4, 5, 6, 11, 12], "__repr__": [1, 2, 3, 4, 6], "repr": [1, 2, 3, 4, 6], "static": [1, 2, 3, 4, 6], "from_xy_theta": [1, 6], "theta": [1, 3, 4, 6], "standard": [1, 6], "pose": [1, 6], "note": [1, 4, 6, 8, 10], "same": [1, 6, 7, 10], "integr": [1, 6], "over": [1, 6], "length": [1, 6], "3": [1, 6, 13], "se3": [2, 6, 13], "3d": [2, 4, 6], "qw": [2, 4, 6], "qx": [2, 4, 6], "qy": [2, 4, 6], "qz": [2, 4, 6], "z": [2, 4, 6], "vz": [2, 6], "omega_x": [2, 4, 6], "omega_i": [2, 4, 6], "omega_z": [2, 4, 6], "wxyz_xyz": [2, 6], "7": [2, 6], "quaternion": [2, 4, 6], "follow": [2, 6], "xyz": [2, 6], "unit_complex": [3, 6], "2": [3, 6, 13], "from_radian": [3, 6], "scalar": [3, 5, 6], "angl": [3, 4, 5, 6], "as_radian": [3, 6], "w": [4, 6], "from_x_radian": [4, 6], "axi": [4, 6], "radian": [4, 6], "from_y_radian": [4, 6], "from_z_radian": [4, 6], "from_rpy_radian": [4, 6], "roll": [4, 5, 6], "pitch": [4, 5, 6], "yaw": [4, 5, 6], "set": [4, 6, 11, 12], "euler": [4, 5, 6], "zyx": [4, 6], "mobil": [4, 6], "convent": [4, 6], "first": [4, 6], "second": [4, 6], "last": [4, 6], "from_quaternion_xyzw": [4, 6], "xyzw": [4, 6], "default": [4, 6], "dataclass": [4, 6, 11, 12, 13], "constructor": [4, 6], "as_quaternion_xyzw": [4, 6], "grab": [4, 6, 8, 10, 11, 12], "as_rpy_radian": [4, 6], "name": [4, 6], "compute_roll_radian": [4, 6], "compute_pitch_radian": [4, 6], "compute_yaw_radian": [4, 6], "alia": 5, "union": 5, "jnp": [5, 8, 10], "onp": [5, 8, 10], "rollpitchyaw": 5, "namedtupl": 5, "backward": 5, "compat": 5, "manifold": [6, 13], "util": [6, 13], "axisnam": 7, "p": 7, "grad": [7, 10], "fun": [7, 10], "argnum": [7, 8, 10], "0": [7, 10], "has_aux": [7, 10], "fals": [7, 10], "holomorph": [7, 10], "allow_int": [7, 10], "reduce_ax": [7, 10], "gradient": [7, 10], "respect": [7, 10], "value_and_grad": [7, 10], "zero_tang": [7, 10], "pytre": [7, 8, 10, 13], "replac": [7, 10], "all": [7, 8, 10, 11, 12, 13], "zero": [7, 8, 10], "correspond": [7, 8, 10], "pytreetyp": [8, 10], "callabletyp": 8, "rplu": [8, 10], "delta": [8, 10], "right": [8, 10], "plu": [8, 10], "t": [8, 10, 11], "support": [8, 10], "instanc": [8, 10], "recurs": [8, 10], "simpl": [8, 10], "addit": [8, 10], "perform": [8, 10], "rminu": [8, 10], "b": [8, 10], "minu": [8, 10], "t_ab": [8, 10], "t_wa": [8, 10], "t_wb": [8, 10], "subtract": [8, 10], "rplus_jacobian_parameters_wrt_delta": [8, 10], "analyt": [8, 10, 13], "linear": [8, 10], "around": [8, 10], "local": [8, 10], "mostli": [8, 10], "reduc": [8, 10], "jit": [8, 10, 11, 12], "compil": [8, 10, 11, 12], "time": [8, 10], "optim": [8, 10, 13], "equival": [8, 10], "def": [8, 10], "sinc": [8, 10], "jacfwd": [8, 10], "itself": [8, 10], "explicitli": [8, 10], "arg": [8, 10], "wrt": [8, 10], "get_epsilon": [11, 12], "dtype": [11, 12], "helper": [11, 12, 13], "specif": [11, 12], "constant": [11, 12], "datatyp": [11, 12], "register_lie_group": [11, 12], "decor": [11, 12], "regist": [11, 12], "class": [11, 12], "variabl": [11, 12], "mark": [11, 12], "method": [11, 12], "theori": 13, "librari": 13, "bodi": 13, "current": 13, "function": 13, "high": 13, "level": 13, "registr": 13, "code": 13, "github": 13, "overview": 13, "adam": 13, "vmap": 13}, "objects": {"": [[6, 0, 0, "-", "jaxlie"]], "jaxlie": [[6, 1, 1, "", "MatrixLieGroup"], [6, 1, 1, "", "SE2"], [6, 1, 1, "", "SE3"], [6, 1, 1, "", "SEBase"], [6, 1, 1, "", "SO2"], [6, 1, 1, "", "SO3"], [6, 1, 1, "", "SOBase"], [0, 0, 0, "-", "_base"], [1, 0, 0, "-", "_se2"], [2, 0, 0, "-", "_se3"], [3, 0, 0, "-", "_so2"], [4, 0, 0, "-", "_so3"], [5, 0, 0, "-", "hints"], [10, 0, 0, "-", "manifold"], [12, 0, 0, "-", "utils"]], "jaxlie.MatrixLieGroup": [[6, 2, 1, "", "__matmul__"], [6, 2, 1, "", "adjoint"], [6, 2, 1, "", "apply"], [6, 2, 1, "", "as_matrix"], [6, 2, 1, "", "exp"], [6, 2, 1, "", "from_matrix"], [6, 2, 1, "", "get_batch_axes"], [6, 2, 1, "", "identity"], [6, 2, 1, "", "inverse"], [6, 2, 1, "", "log"], [6, 3, 1, "", "matrix_dim"], [6, 2, 1, "", "multiply"], [6, 2, 1, "", "normalize"], [6, 2, 1, "", "parameters"], [6, 3, 1, "", "parameters_dim"], [6, 2, 1, "", "sample_uniform"], [6, 3, 1, "", "space_dim"], [6, 3, 1, "", "tangent_dim"]], "jaxlie.SE2": [[6, 2, 1, "", "__repr__"], [6, 2, 1, "", "adjoint"], [6, 2, 1, "", "as_matrix"], [6, 2, 1, "", "exp"], [6, 2, 1, "", "from_matrix"], [6, 2, 1, "", "from_rotation_and_translation"], [6, 2, 1, "", "from_xy_theta"], [6, 2, 1, "", "identity"], [6, 2, 1, "", "log"], [6, 2, 1, "", "parameters"], [6, 2, 1, "", "rotation"], [6, 2, 1, "", "sample_uniform"], [6, 2, 1, "", "translation"], [6, 3, 1, "", "unit_complex_xy"]], "jaxlie.SE3": [[6, 2, 1, "", "__repr__"], [6, 2, 1, "", "adjoint"], [6, 2, 1, "", "as_matrix"], [6, 2, 1, "", "exp"], [6, 2, 1, "", "from_matrix"], [6, 2, 1, "", "from_rotation_and_translation"], [6, 2, 1, "", "identity"], [6, 2, 1, "", "log"], [6, 2, 1, "", "parameters"], [6, 2, 1, "", "rotation"], [6, 2, 1, "", "sample_uniform"], [6, 2, 1, "", "translation"], [6, 3, 1, "", "wxyz_xyz"]], "jaxlie.SEBase": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "from_rotation"], [6, 2, 1, "", "from_rotation_and_translation"], [6, 2, 1, "", "inverse"], [6, 2, 1, "", "multiply"], [6, 2, 1, "", "normalize"], [6, 2, 1, "", "rotation"], [6, 2, 1, "", "translation"]], "jaxlie.SO2": [[6, 2, 1, "", "__repr__"], [6, 2, 1, "", "adjoint"], [6, 2, 1, "", "apply"], [6, 2, 1, "", "as_matrix"], [6, 2, 1, "", "as_radians"], [6, 2, 1, "", "exp"], [6, 2, 1, "", "from_matrix"], [6, 2, 1, "", "from_radians"], [6, 2, 1, "", "identity"], [6, 2, 1, "", "inverse"], [6, 2, 1, "", "log"], [6, 2, 1, "", "multiply"], [6, 2, 1, "", "normalize"], [6, 2, 1, "", "parameters"], [6, 2, 1, "", "sample_uniform"], [6, 3, 1, "", "unit_complex"]], "jaxlie.SO3": [[6, 2, 1, "", "__repr__"], [6, 2, 1, "", "adjoint"], [6, 2, 1, "", "apply"], [6, 2, 1, "", "as_matrix"], [6, 2, 1, "", "as_quaternion_xyzw"], [6, 2, 1, "", "as_rpy_radians"], [6, 2, 1, "", "compute_pitch_radians"], [6, 2, 1, "", "compute_roll_radians"], [6, 2, 1, "", "compute_yaw_radians"], [6, 2, 1, "", "exp"], [6, 2, 1, "", "from_matrix"], [6, 2, 1, "", "from_quaternion_xyzw"], [6, 2, 1, "", "from_rpy_radians"], [6, 2, 1, "", "from_x_radians"], [6, 2, 1, "", "from_y_radians"], [6, 2, 1, "", "from_z_radians"], [6, 2, 1, "", "identity"], [6, 2, 1, "", "inverse"], [6, 2, 1, "", "log"], [6, 2, 1, "", "multiply"], [6, 2, 1, "", "normalize"], [6, 2, 1, "", "parameters"], [6, 2, 1, "", "sample_uniform"], [6, 3, 1, "", "wxyz"]], "jaxlie._base": [[0, 4, 1, "", "ContainedSOType"], [0, 4, 1, "", "GroupType"], [0, 1, 1, "", "MatrixLieGroup"], [0, 1, 1, "", "SEBase"], [0, 4, 1, "", "SEGroupType"], [0, 1, 1, "", "SOBase"]], "jaxlie._base.MatrixLieGroup": [[0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "adjoint"], [0, 2, 1, "", "apply"], [0, 2, 1, "", "as_matrix"], [0, 2, 1, "", "exp"], [0, 2, 1, "", "from_matrix"], [0, 2, 1, "", "get_batch_axes"], [0, 2, 1, "", "identity"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "log"], [0, 3, 1, "", "matrix_dim"], [0, 2, 1, "", "multiply"], [0, 2, 1, "", "normalize"], [0, 2, 1, "", "parameters"], [0, 3, 1, "", "parameters_dim"], [0, 2, 1, "", "sample_uniform"], [0, 3, 1, "", "space_dim"], [0, 3, 1, "", "tangent_dim"]], "jaxlie._base.SEBase": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "from_rotation"], [0, 2, 1, "", "from_rotation_and_translation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "multiply"], [0, 2, 1, "", "normalize"], [0, 2, 1, "", "rotation"], [0, 2, 1, "", "translation"]], "jaxlie._se2": [[1, 1, 1, "", "SE2"]], "jaxlie._se2.SE2": [[1, 2, 1, "", "__repr__"], [1, 2, 1, "", "adjoint"], [1, 2, 1, "", "as_matrix"], [1, 2, 1, "", "exp"], [1, 2, 1, "", "from_matrix"], [1, 2, 1, "", "from_rotation_and_translation"], [1, 2, 1, "", "from_xy_theta"], [1, 2, 1, "", "identity"], [1, 2, 1, "", "log"], [1, 2, 1, "", "parameters"], [1, 2, 1, "", "rotation"], [1, 2, 1, "", "sample_uniform"], [1, 2, 1, "", "translation"], [1, 3, 1, "", "unit_complex_xy"]], "jaxlie._se3": [[2, 1, 1, "", "SE3"]], "jaxlie._se3.SE3": [[2, 2, 1, "", "__repr__"], [2, 2, 1, "", "adjoint"], [2, 2, 1, "", "as_matrix"], [2, 2, 1, "", "exp"], [2, 2, 1, "", "from_matrix"], [2, 2, 1, "", "from_rotation_and_translation"], [2, 2, 1, "", "identity"], [2, 2, 1, "", "log"], [2, 2, 1, "", "parameters"], [2, 2, 1, "", "rotation"], [2, 2, 1, "", "sample_uniform"], [2, 2, 1, "", "translation"], [2, 3, 1, "", "wxyz_xyz"]], "jaxlie._so2": [[3, 1, 1, "", "SO2"]], "jaxlie._so2.SO2": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "adjoint"], [3, 2, 1, "", "apply"], [3, 2, 1, "", "as_matrix"], [3, 2, 1, "", "as_radians"], [3, 2, 1, "", "exp"], [3, 2, 1, "", "from_matrix"], [3, 2, 1, "", "from_radians"], [3, 2, 1, "", "identity"], [3, 2, 1, "", "inverse"], [3, 2, 1, "", "log"], [3, 2, 1, "", "multiply"], [3, 2, 1, "", "normalize"], [3, 2, 1, "", "parameters"], [3, 2, 1, "", "sample_uniform"], [3, 3, 1, "", "unit_complex"]], "jaxlie._so3": [[4, 1, 1, "", "SO3"]], "jaxlie._so3.SO3": [[4, 2, 1, "", "__repr__"], [4, 2, 1, "", "adjoint"], [4, 2, 1, "", "apply"], [4, 2, 1, "", "as_matrix"], [4, 2, 1, "", "as_quaternion_xyzw"], [4, 2, 1, "", "as_rpy_radians"], [4, 2, 1, "", "compute_pitch_radians"], [4, 2, 1, "", "compute_roll_radians"], [4, 2, 1, "", "compute_yaw_radians"], [4, 2, 1, "", "exp"], [4, 2, 1, "", "from_matrix"], [4, 2, 1, "", "from_quaternion_xyzw"], [4, 2, 1, "", "from_rpy_radians"], [4, 2, 1, "", "from_x_radians"], [4, 2, 1, "", "from_y_radians"], [4, 2, 1, "", "from_z_radians"], [4, 2, 1, "", "identity"], [4, 2, 1, "", "inverse"], [4, 2, 1, "", "log"], [4, 2, 1, "", "multiply"], [4, 2, 1, "", "normalize"], [4, 2, 1, "", "parameters"], [4, 2, 1, "", "sample_uniform"], [4, 3, 1, "", "wxyz"]], "jaxlie.hints": [[5, 4, 1, "", "Array"], [5, 4, 1, "", "KeyArray"], [5, 1, 1, "", "RollPitchYaw"], [5, 4, 1, "", "Scalar"]], "jaxlie.hints.RollPitchYaw": [[5, 3, 1, "", "pitch"], [5, 3, 1, "", "roll"], [5, 3, 1, "", "yaw"]], "jaxlie.manifold": [[7, 0, 0, "-", "_autodiff"], [8, 0, 0, "-", "_rplus_rminus"], [9, 0, 0, "-", "_tree_utils"], [10, 5, 1, "", "grad"], [10, 5, 1, "", "rminus"], [10, 5, 1, "", "rplus"], [10, 5, 1, "", "rplus_jacobian_parameters_wrt_delta"], [10, 5, 1, "", "value_and_grad"], [10, 5, 1, "", "zero_tangents"]], "jaxlie.manifold._autodiff": [[7, 4, 1, "", "AxisName"], [7, 4, 1, "", "P"], [7, 5, 1, "", "grad"], [7, 5, 1, "", "value_and_grad"], [7, 5, 1, "", "zero_tangents"]], "jaxlie.manifold._rplus_rminus": [[8, 4, 1, "", "CallableType"], [8, 4, 1, "", "GroupType"], [8, 4, 1, "", "PytreeType"], [8, 5, 1, "", "rminus"], [8, 5, 1, "", "rplus"], [8, 5, 1, "", "rplus_jacobian_parameters_wrt_delta"]], "jaxlie.utils": [[11, 0, 0, "-", "_utils"], [12, 5, 1, "", "get_epsilon"], [12, 5, 1, "", "register_lie_group"]], "jaxlie.utils._utils": [[11, 4, 1, "", "T"], [11, 5, 1, "", "get_epsilon"], [11, 5, 1, "", "register_lie_group"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:data", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "titleterms": {"jaxli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "_base": 0, "modul": [0, 1, 2, 3, 4, 7, 8, 11], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "class": [0, 1, 2, 3, 4, 5, 6], "attribut": [0, 5, 7, 8, 11], "_se2": 1, "_se3": 2, "_so2": 3, "_so3": 4, "hint": 5, "packag": [5, 6, 10, 12], "subpackag": 6, "manifold": [7, 8, 9, 10], "_autodiff": 7, "function": [7, 8, 10, 11, 12], "_rplus_rminu": 8, "_tree_util": 9, "util": [11, 12], "_util": 11, "document": 13, "api": 13, "refer": 13, "exampl": 13, "usag": [13, 16], "se": 14, "3": 14, "overview": 14, "tangent": 15, "space": 15, "adam": 15, "jax": 16, "vmap": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})